#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int coeff;
    int x, y, z;
    struct Node* next;
} Node;

Node* createNode(int coeff, int x, int y, int z) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->coeff = coeff;
    newNode->x = x;
    newNode->y = y;
    newNode->z = z;
    newNode->next = NULL;
    return newNode;
}
void insertNode(Node** head, int coeff, int x, int y, int z) {
    Node* newNode = createNode(coeff, x, y, z);
    if (*head == NULL) {
        *head = newNode;
        newNode->next = *head;
    } else {
        Node* temp = *head;
        while (temp->next != *head) temp = temp->next;
        temp->next = newNode;
        newNode->next = *head;
    }
}
void displayPoly(Node* head) {
    Node* temp = head;
    do {
        printf("%dx^%dy^%dz^%d + ", temp->coeff, temp->x, temp->y, temp->z);
        temp = temp->next;
    } while (temp != head);
    printf("\n");
}
int main() {
    Node* poly1 = NULL;
    insertNode(&poly1, 6, 2, 2, 1);
    insertNode(&poly1, -4, 0, 1, 5);
    insertNode(&poly1, 3, 3, 1, 1);
    insertNode(&poly1, 2, 1, 5, 1);
    insertNode(&poly1, -2, 1, 1, 3);

    Node* poly2 = NULL;
    insertNode(&poly2, 1, 2, 3, 4);
    insertNode(&poly2, -2, 4, 5, 6);
    insertNode(&poly2, 3, 7, 8, 9);

    printf("Polynomial 1: ");
    displayPoly(poly1);
    printf("Polynomial 2: ");
    displayPoly(poly2);

    return 0;
}
